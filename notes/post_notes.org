* Weird Machines and Eerie Algorithms
* Slime

In the third installment of a series on coding, ontology, and sorites-like
problems, which has been unfolding between The Last Instance and
Conflated Automatons, Adam writes:

#+BEGIN_QUOTE
Hopper invented the first compiler: an ontology-kneading machine. By providing
machine checkable names that correspond to words in natural language, it
constructs attachment points for theory construals, stabilizing them, and making
it easier for theories to be rebuilt and shared by others working on the same
system. Machine code – dense, and full of hidden structure – is a rather slimy
artifact itself. Engineering an ontological layer above it – the programming
language – is, like the anti-sorites, a slime refinement manoeuvre.
#+END_QUOTE

https://conflatedautomatons.wordpress.com/2019/02/15/just-like-reifying-a-dinner/

This got me thinking about the (rather pulpy) imagery that I used when
I introduced [[http://roper.eschtronics.ca][ROPER]], imagery that made it into the title of my thesis:
/Urschleim in Silicon: Return Oriented Program Evolution with ROPER/.

[[/img/AI_ooze_transparent.png]]

* Lack and Leak

